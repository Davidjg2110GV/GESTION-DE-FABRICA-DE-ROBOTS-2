-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.robots
(
    serial_robot integer NOT NULL DEFAULT nextval('robots_serial_robots_seq'::regclass),
    id_tipos_robots oid NOT NULL,
    modelo "char" NOT NULL,
    estado text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT robots_pkey PRIMARY KEY (serial_robot)
);

COMMENT ON TABLE public.robots
    IS 'Descripción de los robots';

CREATE TABLE IF NOT EXISTS public.ficha_robot
(
    id_ficha integer NOT NULL,
    serial_robot serial NOT NULL,
    fecha_hora time with time zone NOT NULL,
    piezas_necesarias text COLLATE pg_catalog."default" NOT NULL,
    horas_trabajo time with time zone NOT NULL,
    costo_estimado money NOT NULL,
    "daños" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT ficha_robot_pkey PRIMARY KEY (id_ficha)
);

COMMENT ON TABLE public.ficha_robot
    IS 'Descripción de la ficha de identificación de los robots ';

CREATE TABLE IF NOT EXISTS public.tareas_tecnico
(
    id_tarea integer NOT NULL,
    id_tecnico integer NOT NULL,
    fecha_asignacion time with time zone NOT NULL,
    "nivel_desempeño" "char" NOT NULL,
    id_ficha integer NOT NULL,
    CONSTRAINT tares_tecnico_pkey PRIMARY KEY (id_tarea)
);

COMMENT ON TABLE public.tareas_tecnico
    IS 'Descripción de las tareas realizadas por cada técnico.';

CREATE TABLE IF NOT EXISTS public.reparaciones
(
    id_reparacion serial NOT NULL,
    id_tarea integer NOT NULL,
    uso_de_robot_colaborativo "char" NOT NULL,
    uso_de_realidad_aumentada "char" NOT NULL,
    fecha_hora_reparaciones time with time zone NOT NULL,
    fecha_hora_culminacion time with time zone NOT NULL,
    CONSTRAINT reparaciones_pkey PRIMARY KEY (id_reparacion)
);

COMMENT ON TABLE public.reparaciones
    IS 'Reparaciones (Historial de reparaciones, Predicción de mantenimiento, Optimización de procesos)';

CREATE TABLE IF NOT EXISTS public.detalle_reparaciones
(
    id_detalle serial NOT NULL,
    id_reparacion serial NOT NULL,
    id_tipo_problema serial NOT NULL,
    id_tipo_reparacion serial NOT NULL,
    id_repuesto serial NOT NULL,
    CONSTRAINT detalle_reparaciones_pkey PRIMARY KEY (id_detalle)
);

COMMENT ON TABLE public.detalle_reparaciones
    IS 'Detalle Reparaciones (base de conocimiento, análisis de fallas, piezas reemplazadas)';

ALTER TABLE IF EXISTS public.ficha_robot
    ADD CONSTRAINT ficha_robot_robots_fk FOREIGN KEY (serial_robot)
    REFERENCES public.robots (serial_robot) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.tareas_tecnico
    ADD CONSTRAINT tares_tecnico_ficha_robot_fk FOREIGN KEY (id_ficha)
    REFERENCES public.ficha_robot (id_ficha) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.reparaciones
    ADD CONSTRAINT reparaciones_tares_tecnico_fk FOREIGN KEY (id_tarea)
    REFERENCES public.tareas_tecnico (id_tarea) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.detalle_reparaciones
    ADD CONSTRAINT detalle_reparaciones_reparaciones_fk FOREIGN KEY (id_reparacion)
    REFERENCES public.reparaciones (id_reparacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;